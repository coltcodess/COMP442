START               -> prog
prog                -> classOrImplOrFunc prog

classOrImplOrFunc   -> classDecl 
classOrImplOrFunc   -> implDef 
classOrImplOrFunc   -> funcDecl 

classDecl           -> 'class' 'id' opt-classDecl  '{' rept-classDecl_1 '}' ';'

opt-classDecl     -> 'isa' 'id' rept-opt-classDec_l
opt-classDecl     -> EPSILON 

rept-opt-classDec_l -> ',' 'id' rept-opt-classDec_l 
rept-opt-classDec_l -> EPSILON 

rept-classDecl_1    -> visibility memberDecl rept-classDecl_1
rept-classDecl_1    -> EPSILON

implDef            -> 'implementation' 'id' '{' rep-funcDef '}'

funcDef            -> funcHead funcBody
rep-funcDef        -> funcHead funcBody rep-funcDef
rep-funcDef        -> EPSILON

visibility         -> 'public' | 'private' | EPSILON
memberDecl         -> funcDecl | attributeDecl

funcDecl           -> funcHead 

funcHead           -> 'function' 'id' '(' fParams ')' '=>' returnType 
funcHead           -> 'constructor' '(' fParams ')'

funcBody           -> '{' localVarDeclOrStatRep '}'

localVarDeclOrStatRep -> localVarDeclOrStat localVarDeclOrStatRep
localVarDeclOrStatRep -> EPSILON

localVarDeclOrStat -> localVarDecl 
localVarDeclOrStat -> statement 

attributeDecl      -> 'attribute' varDecl
localVarDecl       -> 'local' varDecl 
varDecl            -> 'id' ':' type arraySize ';'

statement          -> 'if' '(' relExpr ')' 'then' statBlock 'else' statBlock ';' 
statement          -> 'while' '(' relExpr ')' statBlock ';' 
statement          -> 'read' '(' reptVariableORFunctionCall ')' ';' 
statement          -> 'write' '(' expr ')' ';' 
statement          -> 'return' '(' expr ')' ';' 
statement          ->  assignStat ';'

statBlock          -> '{' statement '}' | statement | EPSILON  

assignStat         -> variable assignOp expr

variable           -> 'id' indice

expr               -> arithExpr exp2
exp2               -> relOp arithExpr | EPSILON  

arithExpr          -> term arithExpr2
arithExpr2         -> addOp term arithExpr2 
arithExpr2         -> EPSILON

relExpr            -> arithExpr relOp arithExpr 

factor             -> 'id' factor2 reptVariableORFunctionCall
factor             -> 'intLit'
factor             -> 'floatLit'
factor             -> '(' arithExpr ')'
factor             -> 'not' factor
factor             -> sign factor
factor2            -> '(' aParams ')'
factor2            -> reptIdnest1

term               -> factor rightRecTerm
rightRecTerm       -> multOp factor rightRecTerm 
rightRecTerm       -> EPSILON

reptVariableORFunctionCall -> idnest reptVariableORFunctionCall
reptVariableORFunctionCall -> EPSILON

idnest             -> '.' 'id' idnest2
idnest2             -> '(' aParams ')'
idnest2             -> reptIdnest1
reptIdnest1         -> indice reptIdnest1

idOrSelf           -> 'id' | 'self'

indice             -> '[' arithExpr ']' | EPSILON

arraySize          -> '[' arraySize1
arraySize          -> EPSILON
arraySize1         -> 'intNum' ']'| ']'

type               -> 'int' | 'float' | 'id'
returnType         -> type |  'void'

fParams            -> 'id' ':' type arraySize fParamsTail 
fParams            -> EPSILON
fParamsTail        -> ',' 'id' ':' type arraySize fParamsTail
fParamsTail        -> EPSILON

aParams            -> expr aParamsTail
aParamsTail        -> ',' expr aParamsTail
aParamsTail        -> EPSILON    

assignOp           -> ':='
relOp              -> '==' | '<>' | '<' | '>' | '<=' | '>=' 
addOp              -> '+' | '-' | 'or' 
multOp             -> '*' | '/' | 'and'
sign               -> '+' 
sign               -> '-'
