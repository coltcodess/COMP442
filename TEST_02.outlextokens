[function, function, 1] [id, coolFunc, 1] [openpar, (, 1] [id, arr, 1] [colon, :, 1] [int, int, 1] [opensqbr, [, 1] [closesqbr, ], 1] [comma, ,, 1] [id, size, 1] [colon, :, 1] [int, int, 1] [closepar, ), 1] [arrow, =>, 1] [void, void, 1] 
[opencubr, {, 2] 
[local, local, 3] [id, d, 3] [colon, :, 3] [int, int, 3] [opensqbr, [, 3] [intnum, 10, 3] [closesqbr, ], 3] [semi, ;, 3] 
[local, local, 4] [id, g, 4] [colon, :, 4] [int, int, 4] [opensqbr, [, 4] [intnum, 10, 4] [closesqbr, ], 4] [semi, ;, 4] 
[write, write, 5] [openpar, (, 5] [intnum, 2, 5] [plus, +, 5] [intnum, 2, 5] [closepar, ), 5] [semi, ;, 5] 
[while, while, 7] 
[openpar, (, 7] [id, counter, 7] [lt, <, 7] [intnum, 3, 7] [closepar, ), 7] 
[opencubr, {, 8] 
[write, write, 9] [openpar, (, 9] [intnum, 2, 9] [plus, +, 9] [intnum, 2, 9] [closepar, ), 9] [semi, ;, 9] 
[closecubr, }, 10] [semi, ;, 10] 
[closecubr, }, 11] 
[function, function, 13] 
[id, badFunc, 13] [openpar, (, 13] [closepar, ), 13] [arrow, =>, 13] [void, void, 13] 
[opencubr, {, 14] 
[closecubr, }, 17] 
[class, class, 19] 
[id, a, 19] 
[isa, isa, 19] 
[id, LINEAR, 19] [comma, ,, 19] [id, TRANFORM, 19] [opencubr, {, 19] 
[private, private, 21] 
[function, function, 21] [id, a, 21] [openpar, (, 21] [id, a, 21] [colon, :, 21] [int, int, 21] [opensqbr, [, 21] [intnum, 10, 21] [closesqbr, ], 21] [comma, ,, 21] [id, b, 21] [colon, :, 21] [float, float, 21] [opensqbr, [, 21] [closesqbr, ], 21] [comma, ,, 21] [id, c, 21] [colon, :, 21] [float, float, 21] [closepar, ), 21] [arrow, =>, 21] [id, poop, 21] [semi, ;, 21] 
[private, private, 23] 
[function, function, 23] [id, b, 23] [openpar, (, 23] [closepar, ), 23] [arrow, =>, 23] [void, void, 23] [semi, ;, 23] 
[public, public, 25] 
[constructor, constructor, 25] [openpar, (, 25] [id, f, 25] [colon, :, 25] [float, float, 25] [opensqbr, [, 25] [intnum, 9, 25] [closesqbr, ], 25] [closepar, ), 25] [semi, ;, 25] 
[private, private, 27] 
[attribute, attribute, 27] [id, b, 27] [colon, :, 27] [id, poop, 27] [opensqbr, [, 27] [intnum, 10, 27] [closesqbr, ], 27] [semi, ;, 27] 
[closecubr, }, 29] 
[semi, ;, 29] 
[class, class, 31] 
[id, wia, 31] [opencubr, {, 31] 
[closecubr, }, 35] 
[semi, ;, 35] 
[blockcmt, /* print the array */, 37] 
[function, function, 38] 
[id, printArray, 38] 
[openpar, (, 38] 
[id, arr, 38] [colon, :, 38] [int, int, 38] [opensqbr, [, 38] [closesqbr, ], 38] [comma, ,, 38] [id, size, 38] [colon, :, 38] [int, int, 38] [closepar, ), 38] [arrow, =>, 38] [void, void, 38] 
[opencubr, {, 39] 
[local, local, 40] [id, n, 40] [colon, :, 40] [int, int, 40] [semi, ;, 40] 
[local, local, 41] [id, i, 41] [colon, :, 41] [int, int, 41] [semi, ;, 41] 
[id, n, 42] [assign, :=, 42] [id, size, 42] [semi, ;, 42] 
[id, i, 43] [assign, :=, 43] [intnum, 0, 43] [semi, ;, 43] 
[while, while, 44] [openpar, (, 44] [id, i, 44] [lt, <, 44] [id, n, 44] [closepar, ), 44] [opencubr, {, 44] 
[write, write, 45] [openpar, (, 45] [intnum, 2, 45] [closepar, ), 45] [semi, ;, 45] 
[id, i, 46] [assign, :=, 46] [id, i, 46] [plus, +, 46] [intnum, 1, 46] [semi, ;, 46] 
[closecubr, }, 47] [semi, ;, 47] 
[closecubr, }, 48] 
[inlinecmt, // main funtion to test above, 50] 
[function, function, 50] [id, main, 50] [openpar, (, 50] [closepar, ), 50] [arrow, =>, 50] [void, void, 50] 
[opencubr, {, 51] 
[local, local, 52] [id, arr, 52] [colon, :, 52] [int, int, 52] [opensqbr, [, 52] [intnum, 7, 52] [closesqbr, ], 52] [semi, ;, 52] 
[id, arr, 53] [opensqbr, [, 53] [intnum, 0, 53] [closesqbr, ], 53] [assign, :=, 53] [intnum, 64, 53] [semi, ;, 53] 
[id, arr, 54] [opensqbr, [, 54] [intnum, 1, 54] [closesqbr, ], 54] [assign, :=, 54] [intnum, 34, 54] [semi, ;, 54] 
[id, arr, 55] [opensqbr, [, 55] [intnum, 2, 55] [closesqbr, ], 55] [assign, :=, 55] [intnum, 25, 55] [semi, ;, 55] 
[id, arr, 56] [opensqbr, [, 56] [intnum, 3, 56] [closesqbr, ], 56] [assign, :=, 56] [intnum, 12, 56] [semi, ;, 56] 
[id, arr, 57] [opensqbr, [, 57] [intnum, 4, 57] [closesqbr, ], 57] [assign, :=, 57] [intnum, 22, 57] [semi, ;, 57] 
[id, arr, 58] [opensqbr, [, 58] [intnum, 5, 58] [closesqbr, ], 58] [assign, :=, 58] [intnum, 11, 58] [semi, ;, 58] 
[id, arr, 59] [opensqbr, [, 59] [intnum, 6, 59] [closesqbr, ], 59] [assign, :=, 59] [intnum, 90, 59] [semi, ;, 59] 
[closecubr, }, 61] 
[end_of_file, $, 64] 