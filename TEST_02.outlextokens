[blockcmt, /* sort the array */, 1] 
[blockcmt, /* print the array */, 4] 
[function, function, 5] 
[id, printArray, 5] 
[openpar, (, 5] [id, arr, 5] [colon, :, 5] [int, int, 5] [opensqbr, [, 5] [closesqbr, ], 5] [comma, ,, 5] [id, size, 5] [colon, :, 5] [int, int, 5] [closepar, ), 5] [arrow, =>, 5] [void, void, 5] 
[opencubr, {, 6] 
[local, local, 7] [id, n, 7] [colon, :, 7] [int, int, 7] [semi, ;, 7] 
[local, local, 8] [id, i, 8] [colon, :, 8] [int, int, 8] [semi, ;, 8] 
[id, n, 9] [assign, :=, 9] [id, size, 9] [semi, ;, 9] 
[id, i, 10] [assign, :=, 10] [intnum, 0, 10] [semi, ;, 10] 
[while, while, 11] [openpar, (, 11] [id, i, 11] [lt, <, 11] [id, n, 11] [closepar, ), 11] [opencubr, {, 11] 
[write, write, 12] [openpar, (, 12] [id, arr, 12] [opensqbr, [, 12] [id, i, 12] [closesqbr, ], 12] [closepar, ), 12] [semi, ;, 12] 
[id, i, 13] [assign, :=, 13] [id, i, 13] [plus, +, 13] [intnum, 1, 13] [semi, ;, 13] 
[closecubr, }, 14] [semi, ;, 14] 
[closecubr, }, 15] 
[blockcmt, /*\n    classes\n    --------------------------------------\n|X| no class declaration\n| | class declaration\n| | multiple class declarations\n| | no data member declaration\n| | data member declaration\n| | multiple data member declaration\n| | no member function declaration\n| | member function declaration\n| | multiple member function declaration\n| | no member\n| | no inherited class\n| | one inherited class\n| | multiple inherited classes\n| | private member specifier\n| | public member specifier\n\n    functions: definitions\n    --------------------------------------\n| | no main function definition\n|X| main function definition\n| | no free function definition\n|X| free function definition\n|X| multiple free function definitions\n|X| no member function definition\n| | member function definition\n| | multiple member function definitions\n|X| return type: void\n| | return type: integer\n| | return type: float\n| | return type: id\n| | return type: array (not allowed)\n\n    functions: formal parameters\n    --------------------------------------\n|X| type: integer\n| | type: float\n| | type: id\n|X| type: 1-dim array \n| | type: n-dim array\n| | type: array (with size)\n|X| type: array (without size)\n\n    functions: calls\n    --------------------------------------\n|X| free function call\n| | member function call\n| | parameters:0\n| | parameters:1\n|X| parameters:n\n|X| array parameter - 1-dim\n| | array parameter - n-dim\n| | array parameter - with size\n| | array parameter - without size\n| | function call as statement\n| | function call as expression factor\n| | expression as parameter\n\n    variable declaration\n    --------------------------------------\n|X| type: integer\n| | type: float\n| | type: string\n| | type: id\n|X| type: 1-dim array \n| | type: n-dim array\n|X| type: array (with size)\n| | type: array (without size) (not allowed)\n\n    function body: local variable declarations\n    --------------------------------------\n| | no local variable declarations\n|X| local variable declarations\n| | intertwined statements and variable declarations\n\n    function body: statements\n    --------------------------------------\n| | no statement\n| | 1 statement\n|X| n statements\n|X| if statement\n|X| if: empty then or else blocks\n| | if: 1-statement then or else blocks\n|X| if: n-statements then or else blocks\n|X| while statement\n| | while: empty block\n| | while: 1-statement block\n|X| while: n-statement block\n| | read(<variable>) statement\n|X| write(<expr>) statement\n|X| return(<expr>) statement\n|X| assignment statement\n\n    variable + idnest\n    --------------------------------------\n|X| id\n| | id.id\n| | id.id(id)\n| | id(id).id\n| | id(id).id()\n| | id.id[id]\n| | id[id].id\n| | id[id].id[id]\n| | id.id[id][id]\n| | id[id][id].id\n| | id[id][id].id[id][id]\n| | id(id).id[id]\n| | id(id).id[id][id]\n| | expression as array index\n\n    expressions\n    --------------------------------------\n|X| single variable\n|X| involving addop\n| | involving multop\n|X| involving relop\n| | involving addop + multop\n|X| involving multop + relop\n| | involving addop + multop + relop\n| | involving parentheses\n| | involving nested parentheses\n| | involving not\n| | involving sign\n|X| involving literals\n| | involving variable + idnest\n|X| involving function calls\n| | involving all the above in one expression\n*/, 19] 
[end_of_file, $, 148] 