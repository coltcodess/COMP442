<'|'> ::= '|' 
<'|'> ::= 

<<missing ID>> ::= '|' 
<<missing ID>> ::= 

<='|'> ::= '<addOp>-> '+' 
<='|'> ::= '-' 
<='|'> ::= 'or' <multOp> 
<='|'> ::= 
<='|'> ::= 

<START> ::= <prog> <prog> 

<aParams> ::= <expr> {{ <aParamsTail> }} 
<aParams> ::= EPSILON 

<arithExpr> ::= <relOp> <arithExpr> <arithExpr> 
<arithExpr> ::= <addOp> <term> 
<arithExpr> ::= <term> <sign> 
<arithExpr> ::= 
<arithExpr> ::= ']' <arraySize> 
<arithExpr> ::= 

<assignStat> ::= ';' 
<assignStat> ::= 'if' '(' <relExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' 
<assignStat> ::= 'while' '(' <relExpr> ')' <statBlock> ';' 
<assignStat> ::= 'read' '(' <variable> ')' ';' 
<assignStat> ::= 'write' '(' <expr> ')' ';' 
<assignStat> ::= 'return' '(' <expr> ')' ';' 
<assignStat> ::= <functionCall> ';' <assignStat> 

<classDecl> ::= 
<classDecl> ::= <implDef> 
<classDecl> ::= <funcDef> <classDecl> 

<classOrImplOrFunc> ::= <classOrImplOrFunc> 

<expr> ::= <arithExpr> 
<expr> ::= <relExpr> <relExpr> 
<expr> ::= <assignOp> 

<fParams> ::= ')' '=>' <returnType> 
<fParams> ::= 'constructor' '(' <fParams> ')' <funcBody> 

<fParamsTail> ::= ',' 'id' ':' <type> {{ <arraySize> }} <aParamsTail> 

<funcHead> ::= <funcBody> <visibility> 
<funcHead> ::= 
<funcHead> ::= ';' <funcHead> 

<idOrSelf> ::= {{ <indice> }} '.' 
<idOrSelf> ::= <idOrSelf> '(' <aParams> ')' '.' <indice> 
<idOrSelf> ::= 'id' 
<idOrSelf> ::= 'self' 

<idnest> ::= <ids> {{ <indice> }} <functionCall> 
<idnest> ::= <ids> '(' <aParams> ')' <idnest> 

<implDef> ::= 'implementation' 'id' '{' {{ <funcDef> }} '}' <funcDef> 

<localVarDecl> ::= 
<localVarDecl> ::= <statement> <attributeDecl> 

<localVarDeclOrStat> ::= '}' <localVarDeclOrStat> 

<memberDecl> ::= <funcDecl> 
<memberDecl> ::= <attributeDecl> <funcDecl> 

<relOp> ::= '==' 
<relOp> ::= '<missing '''> 

<statement> ::= '}' 
<statement> ::= <statement> 
<statement> ::= EPSILON 

<term> ::= <term> <multOp> <factor> 
<term> ::= <factor> <factor> 

<type> ::= {{ <arraySize> }} ';' <statement> 
<type> ::= 'int' 
<type> ::= 'float' 
<type> ::= 'id' <returnType> 
<type> ::= 
<type> ::= 'void' <fParams> 
<type> ::= {{ <arraySize> }} {{ <fParamsTail> }} 
<type> ::= EPSILON 

<varDecl> ::= <localVarDecl> 
<varDecl> ::= <varDecl> 

<variable> ::= <assignOp> <expr> <statBlock> 
<variable> ::= 
<variable> ::= <functionCall> 
<variable> ::= 'intLit' 
<variable> ::= 'floatLit' 
<variable> ::= '(' <arithExpr> ')' 
<variable> ::= 'not' <factor> 
<variable> ::= <sign> <factor> <variable> 

<visibility> ::= <memberDecl> 


